#import * from './generated/prisma.graphql'
scalar Upload

input UserInput {
  id: ID
  name: String
  avatar: String
}

type SuccessMessage {
  message: String
}

type Query {
  project(id: Int!): Project
  projects: [Project]!
  me: User
  users: [User]!
  issues(projectId: String!, filter: IssueWhereInput): [Issue!]!
  issue(id: Int!): Issue!
  logsOnIssue(issueId: Int!): [IssueTrackingLog!]!
  singleComment(id: ID!): Comment!
  singleUser(id: ID!): User!
  getProjects(filter: String, skip: Int!, first: Int!): [Project!]!
  projectsCount(filter: String): Int!
  file(id: ID!): File
}

type Mutation {
  createProject(name: String!, key: String!): Project!
  deleteProject(id: Int!): Project
  updateProject(id: Int!, name: String!, key: String!): Project!

  signup(email: String!, name: String!, password: String!): User!
  signin(email: String!, password: String!): User!
  signout: SuccessMessage
  resetPassword(email: String!, password: String!, confirmPassword: String!): User!
  updateUserInfo(email: String!, name: String!, avatar: String): User!

  createIssue(
    title: String!
    description: String
    type: IssueType!
    status: IssueStatus!
    priority: IssuePriority!
    project: String!
    assignee: ID
  ): Issue!

  updateIssue(
    id: Int!
    title: String!
    description: String
    type: IssueType!
    status: IssueStatus!
    priority: IssuePriority!
    assignee: ID
    estimate: Int
    timeSpent: Int
    listPosition: Float
    actionType: String
  ): Issue!

  createComment(text: String!, issue: ID!, actionType: String): Comment!
  updateComment(id: ID!, text: String): Comment!

  uploadFile(file: Upload!): File!
}
