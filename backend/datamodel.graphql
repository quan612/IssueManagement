enum Permission {
  ADMIN
  PRODUCTOWNER
  USER
}

enum IssueType {
  Task
  Bug
  Request
}

enum IssueStatus {
  Backlog
  Open
  InProgress
  Done
}

enum IssuePriority {
  High
  Medium
  Low
}

enum LogType {
  Open
  Assignee
  Status
  Type
  Priority
  Comment
  Estimate
  Attachment
}

type Project {
  id: ID! @id
  name: String!
  key: String! @unique
  issues: [Issue!]! @relation(name: "ProjectIssue", onDelete: CASCADE)
}

type User {
  id: ID! @id
  email: String! @unique
  name: String!
  password: String!
  permissions: [Permission!]! @scalarList(strategy: RELATION)
  assigned: [Issue!]! @relation(name: "AssigneeIssue", onDelete: CASCADE)
  reporter: [Issue!]! @relation(name: "ReporterIssue", onDelete: CASCADE)
  comment: [Comment!]! @relation(name: "CommentByUser", onDelete: CASCADE)
  avatar: String
}

type Issue {
  id: ID! @id
  title: String!
  description: String
  type: IssueType!
  status: IssueStatus!
  priority: IssuePriority!
  assignee: User @relation(name: "AssigneeIssue", onDelete: SET_NULL)
  reporter: User! @relation(name: "ReporterIssue", onDelete: SET_NULL)
  estimate: Int
  timeSpent: Int
  timeRemaining: Int
  listPosition: Float #position on board
  createdAt: DateTime! @createdAt
  updatedAt: DateTime! @updatedAt
  project: Project! @relation(name: "ProjectIssue", onDelete: SET_NULL)
  comments: [Comment!]! @relation(name: "IssueComment", onDelete: CASCADE)
  attachments: [File!]! @relation(name: "IssueFile", onDelete: CASCADE)
  dueDate: DateTime
}

type Comment {
  id: ID! @id
  text: String!
  issue: Issue! @relation(name: "IssueComment")
  owner: User! @relation(name: "CommentByUser")
  createdAt: DateTime! @createdAt
  updatedAt: DateTime! @updatedAt
}

type File {
  id: ID! @id
  filename: String!
  mimetype: String!
  encoding: String!
  url: String! @unique
  issue: Issue! @relation(name: "IssueFile")
  createdAt: DateTime! @createdAt
  updatedAt: DateTime! @updatedAt
}

type Log {
  id: ID! @id
  type: LogType!
  created: DateTime! @createdAt
  user: User @relation(link: INLINE, name: "LogIssueOwner") # FK relationship to User
  issue: Issue @relation(link: INLINE) # FK relationship to Issue
  prevAssignee: User @relation(link: INLINE, name: "LogIssuePrevAssignee") # FK relationship to User
  newAssignee: User @relation(link: INLINE, name: "LogIssueNewAssignee") # FK relationship to User
  previousValue: String
  newValue: String
}
